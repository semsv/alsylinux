#!/bin/bash

firewall_start()
{
   SYSCTLW="/sbin/sysctl -q -w"
   IPTABLES="/usr/sbin/iptables -I INPUT"
   # Disable routing triangulation. Respond to queries out
   # the same interface, not another. Helps to maintain state
   # Also protects against IP spoofing
   $SYSCTLW net.ipv4.conf.all.rp_filter=1
   # Enable logging of packets with malformed IP addresses,
   # Disable redirects,
   # Disable source routed packets,
   # Disable acceptance of ICMP redirects,
   # Turn on protection from Denial of Service (DOS) attacks,
   # Disable responding to ping broadcasts,
   # Enable IP routing. Required if your firewall is protecting a network, NAT included
   $SYSCTLW net.ipv4.conf.all.log_martians=1
   $SYSCTLW net.ipv4.conf.all.send_redirects=0
   $SYSCTLW net.ipv4.conf.all.accept_source_route=0
   $SYSCTLW net.ipv4.conf.all.accept_redirects=0
   $SYSCTLW net.ipv4.tcp_syncookies=1
   $SYSCTLW net.ipv4.icmp_echo_ignore_broadcasts=1
   $SYSCTLW net.ipv4.ip_forward=1
   # Настройка файервола
   # Отключаем протоколы ICMP и IGMP
   $IPTABLES -p icmp -j DROP
   $IPTABLES -p igmp -j DROP
   # отключаем TelNet, HTTPS, SMTP etc
   $IPTABLES -p tcp --dport=23 -j DROP
   $IPTABLES -p tcp --dport=25 -j DROP
   $IPTABLES -p tcp --dport=110 -j DROP
   $IPTABLES -p tcp --dport=143 -j DROP
   $IPTABLES -p tcp --dport=443 -j DROP
   # отключаем NetBIOS
   $IPTABLES -p tcp --dport=137:139 -j DROP 
   # Разрешаем порт 80 (HTTP)
   $IPTABLES -p tcp --dport=80 -j ACCEPT
   # SSH пусть работает только в локальной сети
   $IPTABLES -s 192.168.1.0/24 -p tcp --dport 22 -j ACCEPT
   # Блокируем диапазон адресов
   # sudo iptables -A INPUT -m iprange --src-range 192.168.1.200-192.168.1.255 -j DROP
   # Разрешить трафик через интерфейс loopback
   $IPTABLES -i lo -j ACCEPT
   # Блокируем весь остальной трафик
   $IPTABLES -j DROP
}

  if [ "$1" == "start" ]; then
    firewall_start
  else
    echo "usage: $0 start"
  fi
